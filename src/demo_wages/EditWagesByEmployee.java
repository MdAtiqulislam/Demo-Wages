/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package demo_wages;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author MJIL
 */
public class EditWagesByEmployee extends javax.swing.JFrame {

    /**
     * Creates new form EditWagesByEmployee
     */
    public static Connection connection;
    private Date weekStartDate;
    private Date weekEndDate;
    private int millRunningHour;
    private int hollyDayahour;
    private String empName;
    private String oriDept;
    private String oriShift;
    private String designation;
    private String runingDept;
    private String runingShift;
    private int attenHours;
    private int otHours;
    private int fesAllow;
    private int modifiedWorkHour;
    private int modifiedOTHour;
    private int modifiedHollydayHour;
    private int cardNo;
    private int millHollyDayahour;
    private int releiverAllowance;
    private int specialAllowance;
    private int extraAllowance;
    private int otRate;
    private int wagesRate;
    private int hollyDayAllo;
    private int attnAllowance;
    private int nightAllowance;
    private int redAllowance;
    private int blockStatus;

    public EditWagesByEmployee() {
        initComponents();
        connection = DBconnect.dbconnect();
        getRunningWeek();
        getAllWeeks();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        weekStatrtDateTF = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        weekEndDateTF = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        weekEndDateCombo = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        millRuningHourTF = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        millHollyDayHourTF = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        cardNoTF = new javax.swing.JTextField();
        searchBTN = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        nameTF = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        oriDeptTF = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        runingDeptTF = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        oriShiftTF = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        runingShiftTF = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        designationTF = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        attendanceTF = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        otTF = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        hollyDayHourTF = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        fesTF = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        updateBTN = new javax.swing.JButton();
        clrBTN = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Edit Wages By Employee");

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));

        jLabel2.setText("Week Start Date");

        weekStatrtDateTF.setEditable(false);

        jLabel3.setText("Week End Date");

        weekEndDateTF.setEditable(false);

        jButton1.setText("Change");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        weekEndDateCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select week End Date" }));

        jLabel11.setText("Mill Runing Hour");

        millRuningHourTF.setEditable(false);
        millRuningHourTF.setBackground(java.awt.SystemColor.controlHighlight);
        millRuningHourTF.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        millRuningHourTF.setForeground(new java.awt.Color(255, 0, 0));

        jLabel16.setText("Holly day Hour");

        millHollyDayHourTF.setEditable(false);
        millHollyDayHourTF.setBackground(java.awt.SystemColor.controlHighlight);
        millHollyDayHourTF.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        millHollyDayHourTF.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(weekStatrtDateTF, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(weekEndDateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(weekEndDateTF, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(millRuningHourTF, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(millHollyDayHourTF, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addComponent(weekStatrtDateTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(weekEndDateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel3)
                    .addComponent(weekEndDateTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(millRuningHourTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel16)
                        .addComponent(millHollyDayHourTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jLabel4.setText("Card No");

        cardNoTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardNoTFActionPerformed(evt);
            }
        });

        searchBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_Search_16px.png"))); // NOI18N
        searchBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBTNActionPerformed(evt);
            }
        });

        jLabel5.setText("Name");

        nameTF.setEditable(false);
        nameTF.setBackground(java.awt.SystemColor.controlHighlight);

        jLabel6.setText("Ori. Dept");

        oriDeptTF.setEditable(false);
        oriDeptTF.setBackground(java.awt.SystemColor.controlHighlight);

        jLabel7.setText("Runing Dept");

        runingDeptTF.setEditable(false);
        runingDeptTF.setBackground(java.awt.SystemColor.controlHighlight);

        jLabel8.setText("Ori. Shift");

        oriShiftTF.setEditable(false);
        oriShiftTF.setBackground(java.awt.SystemColor.controlHighlight);

        jLabel9.setText("Runing Shift");

        runingShiftTF.setEditable(false);
        runingShiftTF.setBackground(java.awt.SystemColor.controlHighlight);

        jLabel10.setText("Desination");

        designationTF.setEditable(false);
        designationTF.setBackground(java.awt.SystemColor.controlHighlight);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel7))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(runingDeptTF, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(cardNoTF)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(searchBTN))
                            .addComponent(oriDeptTF, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(runingShiftTF, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(23, 23, 23)
                        .addComponent(oriShiftTF, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(designationTF, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel4)
                    .addComponent(cardNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBTN))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel5)
                    .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel6)
                    .addComponent(oriDeptTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel7)
                    .addComponent(runingDeptTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel8)
                    .addComponent(oriShiftTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel9)
                    .addComponent(runingShiftTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel10)
                    .addComponent(designationTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel12.setText("Attendence(Hours)");

        attendanceTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attendanceTFActionPerformed(evt);
            }
        });

        jLabel13.setText("OT Hours");

        otTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otTFActionPerformed(evt);
            }
        });

        jLabel14.setText("Holly day Hour");

        hollyDayHourTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hollyDayHourTFActionPerformed(evt);
            }
        });

        jLabel15.setText("Festival Allow");

        fesTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fesTFActionPerformed(evt);
            }
        });

        jLabel17.setText("Double Machine HRS");

        jLabel18.setText("Extra Allowance");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(attendanceTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(otTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hollyDayHourTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fesTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(attendanceTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(otTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(hollyDayHourTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(fesTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        updateBTN.setText("Update ");
        updateBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBTNActionPerformed(evt);
            }
        });

        clrBTN.setText("Clear");
        clrBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clrBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(181, 181, 181)
                        .addComponent(updateBTN)
                        .addGap(18, 18, 18)
                        .addComponent(clrBTN)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateBTN)
                    .addComponent(clrBTN))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String endDate = weekEndDateCombo.getSelectedItem().toString();
        if (endDate.equals("Select week End Date")) {
            JOptionPane.showMessageDialog(this, "Please select Week End Date.");
        } else {
            Date date = Date.valueOf(endDate);
            getSelectedWeek(date);
        }
        clearFields();


    }//GEN-LAST:event_jButton1ActionPerformed

    private void cardNoTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardNoTFActionPerformed
        // TODO add your handling code here:
        //clearFields();
        initVariable();
        String key = cardNoTF.getText();
        getUserInfo(key);
        setValue();
        
    }//GEN-LAST:event_cardNoTFActionPerformed

    private void searchBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBTNActionPerformed
        // TODO add your handling code here:
        //clearFields();
        initVariable();
        String key = cardNoTF.getText();
        getUserInfo(key);
        setValue();
    }//GEN-LAST:event_searchBTNActionPerformed

    private void clrBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clrBTNActionPerformed
        // TODO add your handling code here:
        clearFields();
    }//GEN-LAST:event_clrBTNActionPerformed

    private void updateBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBTNActionPerformed
        // TODO add your handling code here:
        getModifiedData();
        updateTotalAttendance();
        getWagesInfo(designation, oriDept);
        getAllowanceInfo();
        removeBlockData();
        calculate();
        
    }//GEN-LAST:event_updateBTNActionPerformed

    private void attendanceTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attendanceTFActionPerformed
        // TODO add your handling code here:
        otTF.requestFocus();
    }//GEN-LAST:event_attendanceTFActionPerformed

    private void otTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otTFActionPerformed
        // TODO add your handling code here:
        hollyDayHourTF.requestFocus();
    }//GEN-LAST:event_otTFActionPerformed

    private void hollyDayHourTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hollyDayHourTFActionPerformed
        // TODO add your handling code here:
        fesTF.requestFocus();
    }//GEN-LAST:event_hollyDayHourTFActionPerformed

    private void fesTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fesTFActionPerformed
        // TODO add your handling code here:
        updateBTN.requestFocus();
    }//GEN-LAST:event_fesTFActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditWagesByEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditWagesByEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditWagesByEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditWagesByEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditWagesByEmployee().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField attendanceTF;
    private javax.swing.JTextField cardNoTF;
    private javax.swing.JButton clrBTN;
    private javax.swing.JTextField designationTF;
    private javax.swing.JTextField fesTF;
    private javax.swing.JTextField hollyDayHourTF;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField millHollyDayHourTF;
    private javax.swing.JTextField millRuningHourTF;
    private javax.swing.JTextField nameTF;
    private javax.swing.JTextField oriDeptTF;
    private javax.swing.JTextField oriShiftTF;
    private javax.swing.JTextField otTF;
    private javax.swing.JTextField runingDeptTF;
    private javax.swing.JTextField runingShiftTF;
    private javax.swing.JButton searchBTN;
    private javax.swing.JButton updateBTN;
    private javax.swing.JComboBox<String> weekEndDateCombo;
    private javax.swing.JTextField weekEndDateTF;
    private javax.swing.JTextField weekStatrtDateTF;
    // End of variables declaration//GEN-END:variables

    private void getRunningWeek() {
        try {
            String sql = "select * from running_week";
            PreparedStatement statement = connection.prepareStatement(sql);
            ResultSet rs = statement.executeQuery();
            if (rs.next()) {
                weekStartDate = rs.getDate("week_start_date");
                weekEndDate = rs.getDate("week_end_date");
                millRunningHour = rs.getInt("mill_running_hour");
                millHollyDayahour = rs.getInt("hollyday_hours");
                weekStatrtDateTF.setText(String.valueOf(weekStartDate));
                weekEndDateTF.setText(String.valueOf(weekEndDate));
                millRuningHourTF.setText(String.valueOf(millRunningHour));
                millHollyDayHourTF.setText(String.valueOf(millHollyDayahour));
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void getAllWeeks() {
        try {
            String sql = "select * from week_setup order by week_end_date DESC limit 10";
            PreparedStatement statement = connection.prepareStatement(sql);
            ResultSet rs = statement.executeQuery();
            while (rs.next()) {
                weekEndDateCombo.addItem(String.valueOf(rs.getDate("week_end_date")));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void getSelectedWeek(Date date) {
        try {
            String sql = "select * from week_setup where week_end_date='" + date + "'";
            PreparedStatement statement = connection.prepareStatement(sql);
            ResultSet rs = statement.executeQuery();
            if (rs.next()) {
                weekStartDate = rs.getDate("week_start_date");
                weekEndDate = rs.getDate("week_end_date");
                millRunningHour = rs.getInt("mill_running_hour");
                millHollyDayahour = rs.getInt("hollyday_hours");
                weekStatrtDateTF.setText(String.valueOf(weekStartDate));
                weekEndDateTF.setText(String.valueOf(weekEndDate));
                millRuningHourTF.setText(String.valueOf(millRunningHour));
                millHollyDayHourTF.setText(String.valueOf(millHollyDayahour));
               
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void getUserInfo(String key) {
        try {
            String sql = "select * from employee where card_no='" + key + "'";
            PreparedStatement statement = connection.prepareStatement(sql);
            ResultSet rs = statement.executeQuery();

            if (rs.next()) {
                empName = rs.getString("name");
                oriDept = rs.getString("department");
                designation = rs.getString("designation");
                releiverAllowance = rs.getInt("reliever_allowance");
                specialAllowance = rs.getInt("special_allowance");
                extraAllowance = rs.getInt("extra_allowance");
                otRate = rs.getInt("ot_rate");
                getAttenData(key);  
                attendanceTF.requestFocus();
            }else{
                JOptionPane.showMessageDialog(this, "Employee not found.");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void getAttenData(String key) {
        try {
            String sql="select * from total_atten_by_week where card_no='"+key+"' and "
                    + "week_start_date='"+weekStartDate+"' and week_end_date='"+weekEndDate+"'";
            PreparedStatement statement=connection.prepareStatement(sql);
            ResultSet rs = statement.executeQuery();
            if(rs.next()){
                runingDept=rs.getString("r_department");
                runingShift=rs.getString("r_shift");
                
                if(rs.getInt("modify_attn_hour")>=0){
                    attenHours=rs.getInt("modify_attn_hour");
                }else{
                     attenHours=rs.getInt("total_work_hour");
                }
                
                
                if(rs.getInt("modify_ot_hour")>=0){
                    otHours=rs.getInt("modify_ot_hour");
                }else{
                      otHours=rs.getInt("total_ot_hour");
                }
               
                
                 if(rs.getInt("modify_holl_hour")>=0){
                    hollyDayahour=rs.getInt("modify_holl_hour");
                }else{
                      hollyDayahour=rs.getInt("hollyDayHour");
                }
               
                
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
            }

    private void clearFields() {
        cardNoTF.setText("");
        nameTF.setText("");
        oriDeptTF.setText("");
        runingDeptTF.setText("");
        oriShiftTF.setText("");
        runingShiftTF.setText("");
        designationTF.setText("");
        attendanceTF.setText("");
        otTF.setText("");
        fesTF.setText("");
        hollyDayHourTF.setText("");
        
        
        
            }

    private void initVariable() {
        empName="";
        oriDept="";
        runingDept="";
        oriShift="";
        runingShift="";
        designation="";
        attenHours=0;
        hollyDayahour=0;
        otHours=0;
        
            }

    private void setValue() {
        //cardNoTF.setText(empName);
        nameTF.setText(empName);
        oriDeptTF.setText(oriDept);
        runingDeptTF.setText(runingDept);
        oriShiftTF.setText(oriShift);
        runingShiftTF.setText(runingShift);
        designationTF.setText(designation);
        attendanceTF.setText(String.valueOf(attenHours));
        otTF.setText(String.valueOf(otHours));
        fesTF.setText(String.valueOf(fesAllow));
        hollyDayHourTF.setText(String.valueOf(hollyDayahour));
            }

    private void updateTotalAttendance() {
        
        try {
            String sql = "update total_atten_by_week set modify_attn_hour='" + modifiedWorkHour + "', "
                    + "modify_ot_hour='" + modifiedOTHour + "',modify_holl_hour='"+modifiedHollydayHour+"'"
                    + "where card_no='" + cardNo + "' and week_start_date='" + weekStartDate + "'"
                    + " and week_end_date='" + weekEndDate + "'";
            PreparedStatement statement = connection.prepareStatement(sql);
            statement.executeUpdate();
        } catch (Exception e) {
            e.printStackTrace();
        }
        clearFields();
            }

    private void getModifiedData() {
        cardNo=Integer.parseInt(cardNoTF.getText());
        modifiedWorkHour=Integer.parseInt(attendanceTF.getText());
        modifiedOTHour=Integer.parseInt(otTF.getText());
        modifiedHollydayHour=Integer.parseInt(hollyDayHourTF.getText());
            }

    private void getWagesInfo(String designation, String oriDept) {
        
        try {
            String sql = "select * from wages_mangement where department='" + oriDept + "' and designation='" + designation + "'";
            PreparedStatement statement = connection.prepareStatement(sql);
            ResultSet rs = statement.executeQuery();
           if(rs.next()){
                wagesRate = rs.getInt("wages_rate");
           }
        } catch (Exception e) {
            e.printStackTrace();
        }
            }

    private void calculate() {
        getAttenData(String.valueOf(cardNo));
        
         double basic, totalAttendanceAllowance, totalNightAllowance, 
                    totalReleiverAllowance, totalSpecialAllowance, payable, totalOtAllowance;
        basic = (attenHours / 8.0) * wagesRate;
        hollyDayAllo = (hollyDayahour / 8) * wagesRate;
        if (attenHours >= millRunningHour) {
            totalAttendanceAllowance = (attenHours / 8) *attnAllowance ;
        } else {
            totalAttendanceAllowance = 0;
        }

        if (runingShift.equals("Night") && attenHours >= millRunningHour) {
            totalNightAllowance = nightAllowance * (attenHours / 8);
        } else if (runingShift.equals("Night") && attenHours < millRunningHour) {
            totalNightAllowance = redAllowance * (attenHours / 8);
        } else {
            totalNightAllowance = 0;
        }

        totalReleiverAllowance = (attenHours / 8) * releiverAllowance;
        totalSpecialAllowance = (attenHours / 8) * specialAllowance;
        payable = basic + totalAttendanceAllowance + totalNightAllowance + totalReleiverAllowance + totalSpecialAllowance;

        totalOtAllowance = (otHours / 8.0) * otRate;
        payable += totalOtAllowance + hollyDayAllo;
        
        
        //Add 10 tk/day for Softner Department
        if(runingDept.equals("Softner")){
            payable+=(attenHours / 8)*10;
        }
        
        
        System.err.println("Payable"+ payable);
        
        
        chechBlockWages();
         if (blockStatus == 1) {
            try {
                String sql = "insert into block (card_no,r_department,r_shift,endofweek,wohrs,"
                        + "rate,bill_amount,paid_amount,paid_date,ot_hrs,ot_wages,reson_to_paid,block_status,department) "
                        + "values (?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                PreparedStatement statement = connection.prepareStatement(sql);
                statement.setInt(1, cardNo);
                statement.setString(2, runingDept);
                statement.setString(3, runingShift);
                statement.setDate(4, weekEndDate);
                statement.setDouble(5, attenHours);
                statement.setInt(6, wagesRate);
                statement.setDouble(7, payable);
                statement.setDouble(8, 0);
                statement.setDate(9, null);
                statement.setInt(10, otHours);
                statement.setInt(11, (int) totalOtAllowance);
                statement.setString(12, "");
                statement.setInt(13, blockStatus);
                statement.setString(14, oriDept);
                statement.executeUpdate();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
         
         
                 if (checkUserInSallery()) {

            try {
                String sql_2 = "update sallery set daily_wages = '" + wagesRate + "',"
                        + "reli_allo = '" + releiverAllowance + "',"
                        + "special_allo = '" + specialAllowance + "',"
                        + "extra_allo = '" + extraAllowance + "',"
                        + "working_day = '" + attenHours / 8 + "',"
                        + "working_hour = '" + attenHours + "',"
                        + "ot_hour = '" + (int) otHours + "',"
                        + "net_payable = '" + payable + "' ,"
                        + "hollyDayAllow = '" + hollyDayAllo + "' ,"
                        + "department='" + oriDept + "', "
                        + "r_department='" + runingDept + "', "
                        + "block_status='" + blockStatus + "', "
                        + "r_shift='" + runingShift + "' "
                        + "where card_no='" + cardNo + "' and "
                        + "week_start_date='" + weekStartDate + "' and "
                        + "week_end_date='" + weekEndDate + "'";

                PreparedStatement statement = connection.prepareStatement(sql_2);
                statement.executeUpdate();
            } catch (Exception e) {
                e.printStackTrace();
            }

        } else {
            try {
                String sql = "insert into sallery"
                        + "(card_no,name,daily_wages,reli_allo,special_allo,"
                        + "extra_allo,working_day,working_hour,ot_hour,net_payable,"
                        + "week_start_date,week_end_date,department,r_shift,block_status,hollyDayAllow,r_department )"
                        + " values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                try (PreparedStatement st_5 = connection.prepareStatement(sql)) {
                    st_5.setInt(1, cardNo);
                    st_5.setString(2, empName);
                    st_5.setDouble(3, wagesRate);
                    st_5.setInt(4, releiverAllowance);
                    st_5.setInt(5, specialAllowance);
                    st_5.setInt(6, extraAllowance);
                    st_5.setInt(7, attenHours / 8);
                    st_5.setInt(8, attenHours);
                    st_5.setInt(9, (int) otHours);
                    st_5.setDouble(10, payable);
                    st_5.setDate(11, weekStartDate);
                    st_5.setDate(12, weekEndDate);
                    st_5.setString(13, oriDept);
                    st_5.setString(14, runingShift);
                    st_5.setInt(15, blockStatus);
                    st_5.setInt(16, hollyDayAllo);
                    st_5.setString(17, runingDept);
                    st_5.executeUpdate();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }   
        
            }

    private void getAllowanceInfo() {
         try {
            String sql = "select * from allo_management";
            PreparedStatement st = connection.prepareStatement(sql);
            ResultSet rs = st.executeQuery();
            if (rs.next()) {
                attnAllowance = rs.getInt("att_allo");
                nightAllowance = rs.getInt("night_allo");
                redAllowance = rs.getInt("red_night_all");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
            }

    private void chechBlockWages() {
        if (attenHours <= 8) {
            if (otHours > 4 && otHours <= 16) {
                blockStatus = 0;
            } else {
                blockStatus = 1;
            }
        } else {
            blockStatus = 0;
        }
        System.err.println("Block Status\t"+blockStatus);
            }

    private void removeBlockData() {
         try {
            String sql = "delete from block where card_no='"+cardNo+"' and endofweek='" + weekEndDate + "'";
            PreparedStatement statement = connection.prepareStatement(sql);
            statement.executeUpdate();
        } catch (Exception e) {
            e.printStackTrace();
        }
           }

    private boolean checkUserInSallery() {
        try {
            String sql = "select * from sallery where card_no='" + cardNo + "' "
                    + "and week_start_date='" + weekStartDate + "' and week_end_date='" + weekEndDate + "'";
            PreparedStatement statement = connection.prepareStatement(sql);
            ResultSet rs = statement.executeQuery();
            return rs.next();
        } catch (SQLException e) {
            e.printStackTrace();
            return false;
        }
            }
}
